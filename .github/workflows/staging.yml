name: Build and Deploy to Staging

on:
  push:
    branches:
      - staging

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup .NET SDK
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '8.0'

      - name: Restore dependencies
        run: dotnet restore

      - name: Build the application
        run: dotnet build --configuration Release

      - name: Publish the application
        run: dotnet publish --configuration Release --output ./publish

      - name: Create deployment artifact (zip file)
        run: zip -r app.zip ./publish

      - name: Upload artifact for deployment
        uses: actions/upload-artifact@v3
        with:
          name: app-artifact
          path: app.zip

  deploy:
    runs-on: ubuntu-latest
    needs: build 

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Download the artifact from the build job
        uses: actions/download-artifact@v3
        with:
          name: app-artifact
          path: ./app-artifact

      - name: Set up Azure CLI
        uses: azure/setup-azure-cli@v1

      - name: Authenticate with Azure using Service Principal
        uses: azure/CLI@v2
        with:
          azure-cli-version: '2.34.0'
        env:
          AZURE_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
          AZURE_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
          AZURE_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
          AZURE_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Deploy the application to Azure Web App (staging)
        run: |
          az webapp deploy --resource-group ${{ secrets.AZURE_RESOURCE_GROUP_STAGING }} \
                           --name ${{ secrets.AZURE_APP_SERVICE_NAME_STAGING }} \
                           --src-path ./app-artifact/app.zip \
                           --type zip
